---
- name: Template Elasticsearch configuration
  template:
    src: "{{ item }}"
    dest: "{{ render_path }}"
  loop_control:
    label: "{{ render_path }}"
  vars:
    template_dir: "{{ role_path }}/templates"
    render_path: "{{ elasticsearch.prefix.config }}/{{ item|elasticsearch_strip_prefix(template_dir + '/elasticsearch/')|elasticsearch_strip_suffix('.j2') }}"
  with_fileglob:
    - "{{ role_path }}/templates/elasticsearch/*.j2"
  notify: Restart Elasticsearch

- name: Configure Elasticsearch (log4j2.properties)
  lineinfile:
    path: "{{ config_filepath }}"
    regexp: "^{{ item.key|regex_escape }}[\\s\\t]*="
    line: "{{ item.key }} = {{ item.value }}"
    state: "{{ 'present' if item.value is not none else 'absent' }}"
  loop_control:
    label: "{{ config_filepath }} {{ item.key }}={{ item.value }}"
  with_dict: "{{ elasticsearch['log4j2.properties'] }}"
  vars:
    config_filepath: "{{ elasticsearch.prefix.config }}/log4j2.properties"
  notify: Restart Elasticsearch

- name: Configure Elasticsearch (jvm.options)
  lineinfile:
    path: "{{ config_filepath }}"
    regexp: "^{{ item.key|regex_escape }}"
    line: "{{ item.key }}{{ item.value }}"
    state: "{{ 'present' if item.value is not none else 'absent' }}"
  loop_control:
    label: "{{ config_filepath }} {{ item.key }}{{ item.value }}"
  with_dict: "{{ elasticsearch['jvm.options'] }}"
  vars:
    config_filepath: "{{ elasticsearch.prefix.config }}/jvm.options"
  notify: Restart Elasticsearch

- name: Create directory for Elasticsearch scripts
  file:
    path: "{{ item }}"
    state: directory
  with_items:
    - "{{ elasticsearch.prefix.config }}/scripts"
  notify: Restart Elasticsearch

- name: Elasticsearch owns Elasticsearch configuration directory
  file:
    path: "{{ elasticsearch.prefix.config }}"
    owner: elasticsearch
    group: elasticsearch

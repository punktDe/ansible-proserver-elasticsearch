---
- name: Enable elasticsearch service
  ansible.builtin.service:
    name: elasticsearch
    enabled: yes

- name: Template Elasticsearch configuration
  register: es_configuration
  ansible.builtin.template:
    src: "elasticsearch/elasticsearch.yml.j2"
    dest: "{{ elasticsearch.prefix.config }}/elasticsearch.yml"
    owner: root
    group: elasticsearch
    mode: "0664"
  notify: Restart Elasticsearch

- name: Configure Elasticsearch (log4j2.properties)
  register: log4j2_configuration
  ansible.builtin.lineinfile:
    path: "{{ config_filepath }}"
    regexp: "^{{ item.key | regex_escape }}[\\s\\t]*="
    line: "{{ item.key }} = {{ item.value }}"
    state: "{{ 'present' if item.value is not none else 'absent' }}"
  loop_control:
    label: "{{ config_filepath }} {{ item.key }}={{ item.value }}"
  with_dict: "{{ elasticsearch['log4j2.properties'] }}"
  vars:
    config_filepath: "{{ elasticsearch.prefix.config }}/log4j2.properties"
  notify: Restart Elasticsearch

- name: Configure Elasticsearch (jvm.options)
  register: jvm_configuration
  ansible.builtin.lineinfile:
    path: "{{ config_filepath }}"
    regexp: "^{{ item.key | regex_escape }}"
    line: "{{ item.key }}{{ item.value }}"
    state: "{{ 'present' if item.value is not none else 'absent' }}"
  loop_control:
    label: "{{ config_filepath }} {{ item.key }}{{ item.value }}"
  with_dict: "{{ elasticsearch['jvm.options'] }}"
  vars:
    config_filepath: "{{ elasticsearch.prefix.config }}/jvm.options"
  notify: Restart Elasticsearch

- name: Create directory for Elasticsearch scripts
  ansible.builtin.file:
    path: "{{ item }}"
    owner: root
    group: elasticsearch
    mode: "0775"
    state: directory
  with_items:
    - "{{ elasticsearch.prefix.config }}/scripts"
  notify: Restart Elasticsearch

- name: Allow Elasticsearch to update its own configuration
  ansible.builtin.file:
    path: "{{ elasticsearch.prefix.config }}"
    state: directory
    group: elasticsearch
    mode: g+rwx

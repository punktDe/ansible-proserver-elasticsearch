---
- name: Generate and read the CA for transport security
  when: elasticsearch.transport_security.ca_from == inventory_hostname
  any_errors_fatal: yes
  block:
    - name: Generate CA for Elasticsearch transport security
      ansible.builtin.command:
        cmd: >-
          {{ elasticsearch.prefix.bin | quote }}/elasticsearch-certutil ca --out {{ elasticsearch.prefix.config + '/ca.p12' | quote }} --pass ""
        creates: "{{ elasticsearch.prefix.config }}/ca.p12"

    - name: Read CA for Elasticsearch transport security
      ansible.builtin.slurp:
        src: "{{ elasticsearch.prefix.config }}/ca.p12"
      register: elasticsearch_read_ca_result

- name: Write CA for Elasticsearch transport security
  when: elasticsearch.transport_security.ca_from != inventory_hostname
  ansible.builtin.copy:
    content: "{{ hostvars[elasticsearch.transport_security.ca_from].elasticsearch_read_ca_result.results.content | b64decode }}"
    dest: "{{ elasticsearch.prefix.config }}/ca.p12"
    owner: root
    group: elasticsearch
    mode: "0640"

- name: Generate certificate for Elasticsearch transport security
  ansible.builtin.command:
    creates: "{{ elasticsearch.prefix.config }}/cert.p12"
    cmd: >-
      {{ elasticsearch.prefix.bin }}/elasticsearch-certutil cert
      --ca {{ elasticsearch.prefix.config }}/ca.p12
      --ca-pass ""
      --dns {{ elasticsearch.transport_security.cert_dns | join(',') | quote }}
      --ip {{ elasticsearch.transport_security.cert_ips | join(',') | quote }}
      --pass ""
      --out {{ elasticsearch.prefix.config }}/cert.p12
      chmod g+r {{ elasticsearch.prefix.config }}/cert.p12
  notify: Restart Elasticsearch

- name: Make sure the ES certificate has the correct permissions
  ansible.builtin.file:
    owner: root
    group: elasticsearch
    path: "{{ elasticsearch.prefix.config }}/cert.p12"
    mode: "0640"
